-- DROP SCHEMA app;

CREATE SCHEMA app AUTHORIZATION avnadmin;

-- DROP TYPE app."agencia_enum";

CREATE TYPE app."agencia_enum" AS ENUM (
	'Reuters',
	'EFE',
	'Otro');

-- DROP TYPE app."sentimiento_enum";

CREATE TYPE app."sentimiento_enum" AS ENUM (
	'positivo',
	'negativo',
	'neutral');

-- DROP SEQUENCE app."USER_user_id_seq";

CREATE SEQUENCE app."USER_user_id_seq"
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE app.articulo_articulo_id_seq;

CREATE SEQUENCE app.articulo_articulo_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE app.categoria_categoria_id_seq;

CREATE SEQUENCE app.categoria_categoria_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE app.evento_evento_id_seq;

CREATE SEQUENCE app.evento_evento_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE app.grupo_de_eventos_grupo_de_eventos_id_seq;

CREATE SEQUENCE app.grupo_de_eventos_grupo_de_eventos_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE app.ideologia_ideologia_id_seq;

CREATE SEQUENCE app.ideologia_ideologia_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE app.influencer_influencer_id_seq;

CREATE SEQUENCE app.influencer_influencer_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE app.influencer_opinion_opinion_id_seq;

CREATE SEQUENCE app.influencer_opinion_opinion_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE app.periodico_periodico_id_seq;

CREATE SEQUENCE app.periodico_periodico_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE app.periodista_periodista_id_seq;

CREATE SEQUENCE app.periodista_periodista_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE app.region_region_id_seq;

CREATE SEQUENCE app.region_region_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE app.subgrupo_de_eventos_subgrupo_de_eventos_id_seq;

CREATE SEQUENCE app.subgrupo_de_eventos_subgrupo_de_eventos_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE app.user_log_log_id_seq;

CREATE SEQUENCE app.user_log_log_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;-- app."USER" definition

-- Drop table

-- DROP TABLE app."USER";

CREATE TABLE app."USER" (
	user_id serial4 NOT NULL,
	nombre varchar(255) NOT NULL,
	email varchar(255) NOT NULL,
	is_admin bool NULL DEFAULT false,
	es_suscriptor bool NULL DEFAULT false,
	fin_fecha_suscripcion timestamp NULL,
	status varchar(255) NULL,
	password_hash varchar(1000) NULL,
	puntos int4 NULL DEFAULT 0,
	CONSTRAINT "USER_email_key" UNIQUE (email),
	CONSTRAINT "USER_pkey" PRIMARY KEY (user_id)
);


-- app.categoria definition

-- Drop table

-- DROP TABLE app.categoria;

CREATE TABLE app.categoria (
	categoria_id serial4 NOT NULL,
	nombre varchar(255) NOT NULL,
	descripcion text NULL,
	subnombre varchar NULL,
	subdescripcion varchar NULL,
	CONSTRAINT categoria_pkey PRIMARY KEY (categoria_id)
);


-- app.ideologia definition

-- Drop table

-- DROP TABLE app.ideologia;

CREATE TABLE app.ideologia (
	ideologia_id serial4 NOT NULL,
	nombre varchar(50) NOT NULL,
	CONSTRAINT ideologia_pkey PRIMARY KEY (ideologia_id)
);


-- app.influencer definition

-- Drop table

-- DROP TABLE app.influencer;

CREATE TABLE app.influencer (
	influencer_id serial4 NOT NULL,
	nombre varchar(255) NOT NULL,
	plataforma varchar(255) NULL,
	username varchar(255) NULL,
	seguidores int4 NULL,
	url varchar(255) NULL,
	CONSTRAINT influencer_pkey PRIMARY KEY (influencer_id)
);


-- app.periodista definition

-- Drop table

-- DROP TABLE app.periodista;

CREATE TABLE app.periodista (
	periodista_id serial4 NOT NULL,
	nombre varchar(255) NOT NULL,
	apellido varchar(255) NOT NULL,
	email varchar(255) NULL,
	telefono varchar(50) NULL,
	biografia text NULL,
	fecha_nacimiento date NULL,
	nacionalidad varchar(255) NULL,
	foto varchar(255) NULL,
	CONSTRAINT periodista_pkey PRIMARY KEY (periodista_id)
);


-- app.region definition

-- Drop table

-- DROP TABLE app.region;

CREATE TABLE app.region (
	region_id serial4 NOT NULL,
	region_nombre varchar(255) NOT NULL,
	pais_iso_code varchar(2) NULL,
	"ISO31662_subdivision_code" varchar NULL,
	pais_nombre varchar NULL,
	CONSTRAINT region_pkey PRIMARY KEY (region_id)
);


-- app.evento definition

-- Drop table

-- DROP TABLE app.evento;

CREATE TABLE app.evento (
	evento_id serial4 NOT NULL,
	titulo varchar(255) NOT NULL,
	descripcion text NULL,
	fecha_evento date NULL,
	impacto varchar(255) NULL,
	categoria_id int4 NOT NULL,
	grupo_de_eventos_id int4 NULL,
	subgrupo_de_eventos_id int4 NULL,
	gpt_sujeto_activo varchar(255) NULL,
	gpt_sujeto_pasivo varchar(255) NULL,
	gpt_importancia int4 NULL,
	gpt_tiene_contexto bool NULL DEFAULT false,
	CONSTRAINT evento_pkey PRIMARY KEY (evento_id),
	CONSTRAINT evento_categoria_id_fkey FOREIGN KEY (categoria_id) REFERENCES app.categoria(categoria_id)
);


-- app.evento_region definition

-- Drop table

-- DROP TABLE app.evento_region;

CREATE TABLE app.evento_region (
	evento_id int4 NOT NULL,
	region_id int4 NOT NULL,
	CONSTRAINT evento_region_pkey PRIMARY KEY (evento_id, region_id),
	CONSTRAINT evento_region_evento_id_fkey FOREIGN KEY (evento_id) REFERENCES app.evento(evento_id),
	CONSTRAINT evento_region_region_id_fkey FOREIGN KEY (region_id) REFERENCES app.region(region_id)
);


-- app.influencer_opinion definition

-- Drop table

-- DROP TABLE app.influencer_opinion;

CREATE TABLE app.influencer_opinion (
	opinion_id serial4 NOT NULL,
	influencer_id int4 NOT NULL,
	evento_id int4 NOT NULL,
	contenido text NULL,
	fecha_publicacion timestamp NULL DEFAULT now(),
	url varchar(255) NULL,
	CONSTRAINT influencer_opinion_pkey PRIMARY KEY (opinion_id),
	CONSTRAINT influencer_opinion_evento_id_fkey FOREIGN KEY (evento_id) REFERENCES app.evento(evento_id),
	CONSTRAINT influencer_opinion_influencer_id_fkey FOREIGN KEY (influencer_id) REFERENCES app.influencer(influencer_id)
);


-- app.periodico definition

-- Drop table

-- DROP TABLE app.periodico;

CREATE TABLE app.periodico (
	periodico_id serial4 NOT NULL,
	nombre varchar(255) NOT NULL,
	pais_iso_code varchar(2) NULL,
	idioma varchar(50) NULL,
	sitio_web varchar(255) NULL,
	logo_url varchar(255) NULL,
	tipo varchar(50) NULL,
	circulacion int4 NULL,
	suscriptores int4 NULL,
	ideologia_id int4 NULL,
	CONSTRAINT periodico_pkey PRIMARY KEY (periodico_id),
	CONSTRAINT periodico_ideologia_id_fkey FOREIGN KEY (ideologia_id) REFERENCES app.ideologia(ideologia_id)
);


-- app.articulo definition

-- Drop table

-- DROP TABLE app.articulo;

CREATE TABLE app.articulo (
	articulo_id serial4 NOT NULL,
	titular varchar(1000) NOT NULL,
	subtitular text NULL,
	gpt_palabras_clave varchar(1000) NULL,
	numero_de_palabras int4 NULL,
	likes int4 NULL,
	tipo varchar(50) NOT NULL,
	url varchar(255) NULL,
	paywall bool NULL DEFAULT false,
	fecha_publicacion date NULL,
	updated_on timestamp NULL,
	periodico_id int4 NOT NULL,
	periodista_id int4 NULL,
	ideologia_id int4 NULL,
	cuerpo text NULL,
	gpt_titular varchar(1000) NULL,
	gpt_sentimiento app."sentimiento_enum" NULL DEFAULT 'neutral'::app.sentimiento_enum,
	gpt_titular_clickbait bool NULL DEFAULT false,
	agencia app."agencia_enum" NULL,
	gpt_importancia int4 NULL,
	gpt_cantidad_fuentes_citadas int4 NULL,
	gpt_opinion varchar NULL,
	gpt_resumen varchar NULL,
	palabras_clave_embeddings varchar NULL,
	CONSTRAINT articulo_pkey PRIMARY KEY (articulo_id),
	CONSTRAINT articulo_ideologia_id_fkey FOREIGN KEY (ideologia_id) REFERENCES app.ideologia(ideologia_id),
	CONSTRAINT articulo_periodico_id_fkey FOREIGN KEY (periodico_id) REFERENCES app.periodico(periodico_id),
	CONSTRAINT articulo_periodista_id_fkey FOREIGN KEY (periodista_id) REFERENCES app.periodista(periodista_id)
);


-- app.articulo_evento definition

-- Drop table

-- DROP TABLE app.articulo_evento;

CREATE TABLE app.articulo_evento (
	articulo_id int4 NOT NULL,
	evento_id int4 NOT NULL,
	cluster_id int4 NULL,
	cluster_descripcion varchar(255) NULL,
	CONSTRAINT articulo_evento_pkey PRIMARY KEY (articulo_id, evento_id),
	CONSTRAINT articulo_evento_articulo_id_fkey FOREIGN KEY (articulo_id) REFERENCES app.articulo(articulo_id),
	CONSTRAINT articulo_evento_evento_id_fkey FOREIGN KEY (evento_id) REFERENCES app.evento(evento_id)
);


-- app.articulo_influencer_mencion definition

-- Drop table

-- DROP TABLE app.articulo_influencer_mencion;

CREATE TABLE app.articulo_influencer_mencion (
	articulo_id int4 NOT NULL,
	influencer_id int4 NOT NULL,
	fecha_mencion timestamp NULL DEFAULT now(),
	plataforma varchar(255) NULL,
	url varchar(255) NULL,
	CONSTRAINT articulo_influencer_mencion_pkey PRIMARY KEY (articulo_id, influencer_id),
	CONSTRAINT articulo_influencer_mencion_articulo_id_fkey FOREIGN KEY (articulo_id) REFERENCES app.articulo(articulo_id),
	CONSTRAINT articulo_influencer_mencion_influencer_id_fkey FOREIGN KEY (influencer_id) REFERENCES app.influencer(influencer_id)
);


-- app.user_log definition

-- Drop table

-- DROP TABLE app.user_log;

CREATE TABLE app.user_log (
	log_id serial4 NOT NULL,
	user_id int4 NULL,
	"timestamp" timestamp NULL DEFAULT now(),
	articulo_id int4 NULL,
	evento_id int4 NULL,
	tipo varchar(50) NULL,
	ip varchar(50) NULL,
	navegador varchar(255) NULL,
	puntos_otorgados int4 NULL DEFAULT 0,
	CONSTRAINT user_log_pkey PRIMARY KEY (log_id),
	CONSTRAINT user_log_articulo_id_fkey FOREIGN KEY (articulo_id) REFERENCES app.articulo(articulo_id),
	CONSTRAINT user_log_evento_id_fkey FOREIGN KEY (evento_id) REFERENCES app.evento(evento_id),
	CONSTRAINT user_log_user_id_fkey FOREIGN KEY (user_id) REFERENCES app."USER"(user_id)
);