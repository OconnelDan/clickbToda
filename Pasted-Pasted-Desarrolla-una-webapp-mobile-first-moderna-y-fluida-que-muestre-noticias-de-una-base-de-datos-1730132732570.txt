Pasted-Desarrolla-una-webapp-mobile-first-moderna-y-fluida-que-muestre-noticias-de-una-base-de-datos-ya-ali-1730129081150.txt
Desarrolla una webapp mobile-first moderna y fluida que muestre noticias de una base de datos ya alimentada. La aplicación debe estar desarrollada en Python utilizando APIs, y debe seguir las siguientes especificaciones:

Estructura y Usabilidad:

Home Page:

Organizada de la siguiente manera:
Un título para cada categoria y subcategoria.
Un título más pequeño y un carril para cada uno de los EVENTOS, donde irán las tarjetas de los artículos de ese evento.
Dentro de los carriles de subcategoria, tarjetas verticales para cada ARTICULO. Deben poder entrar al menos dos a lo ancho en versión móvil. Arrastrando con el dedo se deslizarán las tarjetas por el carril.
Contenido de las tarjetas:
Una imagen pequeña con el logo del periódico (proveniente de PERIODICO.logo_url).
Los primeros caracteres del titular (ARTICULO.titular) que entren en tres líneas + elipsis.
Si la noticia tiene paywall (ARTICULO.paywall = TRUE), la tipografía del titular será gris en vez de negro.
El ancho y alto de todas las tarjetas debe ser el mismo.
Las imágenes de los periódicos no deben deformarse.
Ordenamiento:

Los carriles de categorias se ordenarán por la cantidad de EVENTOS descendiente de ese grupo.
Lo mismo aplica para subcategorias.
Funcionalidades Accesorias:

Autenticación de Usuarios:
Registro y login de usuarios.
Recuperación de contraseña.
Verificación de email.
Gestión de Usuarios (Backend):
Panel de administración para gestionar usuarios (USER), incluyendo la capacidad de bloquear/desbloquear usuarios y asignar roles (is_admin).
Suscripciones:
Integración con Stripe para gestionar suscripciones mensuales.
Usuarios suscritos (es_suscriptor = TRUE) tendrán acceso a funcionalidades premium, como recibir un email diario personalizado.
Selección de Fechas:
Un selector (combo) para elegir fechas de noticias, predeterminadamente mostrando la fecha de la última noticia en la base de datos.
Búsqueda y Filtrado:
Búsqueda por palabras clave en titulares y subtitulares.
Filtrado por categorías, eventos, subcategorias.
Detalle de Artículo:
Al hacer clic en una tarjeta de artículo, mostrar detalles completos del artículo, incluyendo:
Titular completo.
Subtitular.
Fecha de publicación.
Nombre del periodista (si aplica).
Imagen principal (si está disponible).
Enlace al artículo original (ARTICULO.url).
Si el artículo tiene paywall, mostrar una advertencia antes de redirigir.
Notificaciones:
Permitir a los usuarios suscribirse a notificaciones push para nuevos eventos o artículos en sus categorías de interés.
Perfil de Usuario:
Sección donde los usuarios pueden actualizar su información, ver el estado de su suscripción y configurar preferencias (ejemplo: categorías de interés para el email diario).
Email Diario Personalizado:
Para usuarios suscritos, enviar un email diario con las noticias relevantes según sus preferencias.
Responsive Design:
La aplicación debe ser completamente responsive, optimizada para dispositivos móviles pero funcional en tablets y desktops.
Seguridad:
Sanitización de inputs para prevenir inyecciones SQL u otras vulnerabilidades.
Almacenamiento seguro de contraseñas (password_hash).
Implementación de HTTPS y buenas prácticas de seguridad en la API.
Optimización de Rendimiento:
Paginación o carga diferida (lazy loading) de contenidos para mejorar la velocidad.
Caché de contenidos estáticos.
Internacionalización:
Soporte para múltiples idiomas si es necesario, considerando el campo PERIODICO.idioma.
Accesibilidad:
Cumplir con estándares de accesibilidad web (WCAG 2.1).
Registro de Actividades:
Log de actividades de usuarios para monitorear interacciones y mejorar el servicio.
Integración con Redes Sociales:
Opciones para compartir artículos en redes sociales.
Login con cuentas de Google, Facebook, etc. (opcional).
Administración de Contenido (Backend):
Panel para administrar contenidos, categorías, eventos y demás tablas de la base de datos.
Posibilidad de agregar, editar o eliminar registros si es necesario.
API Endpoints Requeridos: